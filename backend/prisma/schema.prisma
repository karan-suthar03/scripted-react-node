// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false) @map("is_admin")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  stories Story[]

  @@map("users")
}

model Story {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  startNodeId Int?     @map("start_node_id")
  authorId    Int      @map("author_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  author    User  @relation(fields: [authorId], references: [id], onDelete: Cascade)
  startNode Node? @relation(fields: [startNodeId], references: [id], onDelete: SetNull)

  @@map("stories")
}

model Node {
  id               Int      @id @default(autoincrement())
  snippet          String   @db.Text
  parentNodeId     Int?     @map("parent_node_id")
  selectedOptionId Int?     @map("selected_option_id")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  // Relations
  parentNode     Node?   @relation("NodeOptions", fields: [parentNodeId], references: [id], onDelete: Cascade)
  options        Node[]  @relation("NodeOptions")
  selectedOption Node?   @relation("SelectedOption", fields: [selectedOptionId], references: [id], onDelete: SetNull)
  selectedBy     Node[]  @relation("SelectedOption")
  stories        Story[]

  @@map("nodes")
}
